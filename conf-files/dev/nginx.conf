daemon off;

worker_processes  1;
pid               {{{VEROOT}}}/pid/nginx.pid;
error_log         {{{VEROOT}}}/log/nginx-error.log;

# should create a new user
# and just chown the static files to that user
# during deployment.
# user {{{NGINX_USER}}} {{{NGINX_USER}}};

events {
  worker_connections  1024;
}

http {
  # Some sensible defaults.
  include               mime.types;
  default_type          application/octet-stream;
  keepalive_timeout     10;
  client_max_body_size  20m;
  sendfile              on;
#  gzip                  on;

  # Directories
  client_body_temp_path tmp/client_body/  2 2;
  fastcgi_temp_path     tmp/fastcgi/;
  proxy_temp_path       tmp/proxy/;
  uwsgi_temp_path       tmp/uwsgi/;

  # Logging
  access_log            {{{VEROOT}}}/log/nginx-access.log  combined;

  # uWSGI instance serving expertsrc.
  upstream expertsrc-django {
    # Distribute requests to servers based on client IP. This keeps load
    # balancing fair but consistent per-client. In this instance we're
    # only using one uWGSI worker anyway.
    ip_hash;
    server unix:{{{VEROOT}}}/sock/expertsrc-uwsgi.sock;
  }

  upstream doit-django {
    # Distribute requests to servers based on client IP. This keeps load
    # balancing fair but consistent per-client. In this instance we're
    # only using one uWGSI worker anyway.
    ip_hash;
    server unix:{{{VEROOT}}}/sock/doit-uwsgi.sock;
  }

  # configuration for expertsrc
  server {
    listen {{{EXPERTSRC_PORT}}};
    server_name {{{SERVER_NAME}}};

    #Django admin media.
    location /media/admin/ {
      alias {{{VEROOT}}}/lib/python2.7/site-packages/django/contrib/admin/media/;
    }

    # Your project's static media.
    location /static/ {
      alias {{{VEROOT}}}/apps/expertsrc/www/static/;
      autoindex on;
    }

    # Finally, send all non-media requests to the Django server.
    location / {
      uwsgi_pass  expertsrc-django;
      include     uwsgi_params;
    }
  }

  # configuration for datatamer
  server {
    listen {{{DATA_TAMER_PORT}}};
    server_name {{{SERVER_NAME}}};

    # Your project's static media.
    location /static/ {
      alias {{{VEROOT}}}/apps/doit/www/static/;
      autoindex on;
    }

    # Finally, send all non-media requests to the Django server.
    location / {
      uwsgi_pass  doit-django;
      include     uwsgi_params;
    }
  }


}
